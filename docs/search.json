[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Upul Cooray",
    "section": "",
    "text": "Github\n  GoogleScholar\n\n  \n  \nAn average PhD Student 😳\n\n\nTohoku University  | 🇯🇵 | PhD in Public Health | Sep 2018 - Aug 2022\nUniverssity College London | 🇬🇧 | MSc in Dental Public Health | Sep 2015 - Aug 2016\nUniversity of Peradeniya  | 🇱🇰 | Bachelor of Dental Surgery (BDS) | May 2006 - Aug 2011\n\n\n\nHealth Inequalities | Social determinants of health | Oral Health\nEpidemiology | Biostatistics | Causal inference [ with TMLE / LMTP] | Machine Learning |  programming\nCricket | Badminton | Movies | Coding | Linux"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome",
    "section": "",
    "text": "Purpose of this blog is to post learning material related to statistical analysis using  and various topics relate to applied statistical methods in epidemiological and public health research in general.\nI started this blog to complement the internal Stat Club in the Department of International Oral Health, Graduate School of Dentistry, Tohoku University, Japan. People in my lab mostly use stata for data analyses. Purpose of this Stat Club is to help them transitions into  gradually.\nNow you must be thinking.. “why listen to this guy 🤔!!”\nI myself is not an  expert. I switched to  (from stata) about a year ago simply because I didn’t want to deal with the hazel of stata subcriptions. I started learning R by simply translating my old stata .do into R code. I fell in 💗 with R ecosystem and tidyverse within few months. Currently, my whole workflow revolve around  (data analyses, writing manuscripts, making presentations, building this blog, and my PhD thesis).\nI will try my best to share my stata to R transition experience. And let’s learn some statistics and new methods along the way.\n🙏 よろしくお願いします!!!"
  },
  {
    "objectID": "posts/getting-started/index.html",
    "href": "posts/getting-started/index.html",
    "title": "Getting Started",
    "section": "",
    "text": "You need R language installed in your PC to start coding in R. Default graphical user interface of R is not very pleasant to work with.\nLooks like this..!\n\nAlmost all R users use an alternative IDE known as R-studio which makes your R learning a much pleasant experience. We will explore Rstudio features later.\nR studio looks like this!\n\n\n\nThis is me creating this post in Rstudio 😃\n\n\nInstallation of R and Rstudio is very simple!\nStep 1: Go to r-project website [click here] and download the installer for your PC’s OS.\nStep 2: Execute the installer with all the default settings (make sure R is install into the PATH - normally this is the default behavior)\nStep 3: Navigate to this page and download the Rstudio installer for your PC’s OS and run it.\nNow you are all set to start coding in R…!!!\nCheck your installation by opening Rstudio and just typing 1 + 1 in the console window and press Enter key.\n\n\n\nlike this\n\n\nNow you are ready to start learning R…! 👍"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stat ClubR",
    "section": "",
    "text": "Welcome\n\n\n\n\n\n\n\nNews\n\n\n\n\n\n\n\n\n\n\n\nJun 9, 2022\n\n\nUpul Cooray\n\n\n\n\n\n\n  \n\n\n\n\nInstalling R packages\n\n\n\n\n\n\n\nTutorials\n\n\n\n\n\n\n\n\n\n\n\nJun 9, 2022\n\n\nUpul Cooray\n\n\n\n\n\n\n  \n\n\n\n\nInstalling R packages\n\n\n\n\n\n\n\nNews\n\n\nTutorials\n\n\n\n\n\n\n\n\n\n\n\nJun 4, 2022\n\n\nUpul Cooray\n\n\n\n\n\n\n  \n\n\n\n\nGetting Started\n\n\n\n\n\n\n\nNews\n\n\nTutorials\n\n\n\n\n\n\n\n\n\n\n\nMay 25, 2022\n\n\nUpul Cooray\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/installing-essential-packages/index.html",
    "href": "posts/installing-essential-packages/index.html",
    "title": "Installing R packages",
    "section": "",
    "text": "I hope everyone was able to install R and Rstudio successfully!\nNow your R installation has loaded with some functions (we will talk about functions in greater depth later..) these functions are capable of performing a particular computation.\nFor example sqrt() function can compute square root of any number you type within those brackets (identical to stata 😃)\nThese default functions that come with R installation are known as Base R functions.\nHowever, the versatility of R comes from its external packages 📦.\nA package is simply a collection of functions. Once you have a package installed on top base R, you can access all the functions offered by that particular package.\nAs of today, there are 18636 packages available in official R package repository .\nR has a very active & passionate open source community. There are new packages coming up everyday. Often, you can find a package or a function to implement what ever you want.\nFor starters, lets install some of useful packages for our data manipulation purposes.\nThe first package I load when ever I open up Rstudio is tidyverse ❣️. tidyverse package is a collection of multiple packages 📦📦📦 (8 packges to be exact). You will gradually get familiar with tidyverse packages and their functions. Just need to have some patients.. 😌.\nType following code in Rstudio console to install tidyverse;\ninstall.packages(\"tidyverse\")\nThis is how you install any official R package from the package repository.\ninstall.packages(\"package_name\")\nHowever, sometimes you might find some packages with useful functions which are not on official R repository yet. You can install those packages directly from developers github page. To do that, you will need another utility package called devtools .\nSo, please go ahead and,\ninstall.packages(\"devtools\")\nWhen I transition form stata initially, one thing I missed the most about stata is stata’s tab function. I know you all love tab function. Someone has written a R function to mimic stata tab but it is not on official repo yet.\nNow that you have devtools installed, you can grab this package directly from github\ndevtools::install_github(\"gvelasq/tidytab\")\n❗ we have tab now 🤝.\nWe will install other packages when we need them. You can do most of the stuff only with tidyverse"
  },
  {
    "objectID": "posts/installing-essential-packages/index.html#download-dataset",
    "href": "posts/installing-essential-packages/index.html#download-dataset",
    "title": "Installing R packages",
    "section": "Download dataset",
    "text": "Download dataset\nFor our future tutorial I am thinking of using NHANES data (as it is open and relevant to us )\nI extracted some data from NHANES website (I used this data for a actual study). I will the"
  },
  {
    "objectID": "posts/installing-essential-packages/index.html#download-data",
    "href": "posts/installing-essential-packages/index.html#download-data",
    "title": "Installing R packages",
    "section": "Download data",
    "text": "Download data\nFor our future tutorial I am thinking of using NHANES data (as it is open and relevant to us )\nI extracted some data from NHANES website (I used this data for a actual study). Please check if you can download it using the following link.\n\n\n\n Download nhanes_extracted.rds file"
  },
  {
    "objectID": "posts/session_1/index.html",
    "href": "posts/session_1/index.html",
    "title": "Installing R packages",
    "section": "",
    "text": "Today we will start by familiarizing ourselves with Rstudio interface.\nFirst, I want you to apply some setting in the Rstudio;\nPlease go to Tools -> Global options\n\n\n\n\n\nMake sure settings in red circled areas are similar to as shown in the picture above (this prevents some future headaches when you work on a project)\nI will walk you through the Rstudio interface main features. You will become very familiar with it once we start actual data analysis.\nThen, I will introduce my workflow in starting a new project and why I do that. This might not be optimal for you all, once you are familiar with the R environment feel free to adapt your own method.\n\nUsually, I always create a dedicated R project for all my projects. Let’s all create a R project for this stat club.\n\nyou will also have to understand little bit about\n\nCreating sub folders\nUnderstanding project root directory\nUnderstand how to use relative paths (this makes your project portable .. meaning you can just copy and past you project anywhere and nothing will break)\n\nexcersice 1 : create a folder name data within you stat club project and move nhanes_extracted.rds file into that folder.\n(download link for data is in https://upulcooray.github.io/Stat-ClubR/posts/installing-essential-packages/ )\nThen, let’s create our first R script. R scripts are similar to stata .do file . R script files has .R extension at the end ( I usually keep R scrips in a separate folder within the peoject)\nTo check our understanding of relative paths, lets try to summon nhanes_extracted.rds file which is located within data folder using a R script named basics.R\nwe can use readRDS() function for this purpose.\n\nnote: .rds is a R specific data format you can save any object in your R environment as a .rds file. I used .rds file to distribute data because the file size of .rds is significantly less compared to .csv\n\nIf there is enough time lets talk little bit about R data types as well."
  }
]