---
title: "Installing R packages"
title-block-banner: true
author: "Upul Cooray"
date: "2022-06-04"
categories: [News, Tutorials]
image: "img.png"
---

I hope everyone was able to install R and Rstudio successfully!

Now your R installation has loaded with some functions (we will talk about functions in greater depth later..) these functions are capable of performing a particular computation.

For example `sqrt()` function can compute square root of any number you type within those brackets (identical to `stata` üòÉ)

These default functions that come with R installation are known as __Base R functions__.

However, the versatility of R comes from its external packages üì¶.

A package is simply a collection of functions. Once you have a package installed on top base R, you can access all the functions offered by that particular package.

As of today, there are 18636 packages available in official R package repository ![CRAN](https://cran.r-project.org/web/packages/).

R has a very active & passionate open source community. There are new packages coming up everyday. Often, you can find a package or a function to implement what ever you want.

For starters, lets install some of useful packages for our data manipulation purposes.

The first package I load when ever I open up Rstudio is `tidyverse` ‚ù£Ô∏è. `tidyverse` package is a collection of multiple packages üì¶üì¶üì¶ (8 packges to be exact). You will gradually get familiar with tidyverse packages and their functions. Just need to have some patients.. üòå.

Type following code in Rstudio console to install tidyverse;

`install.packages("tidyverse")`

This is how you install any official R package from the package repository.

`install.packages("package_name")`

However, sometimes you might find some packages with useful functions which are not on official R repository yet. You can install those packages directly from developers `github` page. To do that, you will need another utility package called `devtools` .

So, please go ahead and,

`install.packages("devtools")`

When I transition form `stata` initially, one thing I missed the most about `stata` is stata's `tab` function. I know you all love `tab` function. Someone has written a R function to mimic stata `tab` but it is not on official repo yet.

Now that you have `devtools` installed, you can grab this package directly from `github`

`devtools::install_github("gvelasq/tidytab")`

‚ùó we have `tab` now ü§ù.

We will install other packages when we need them. You can do most of the stuff only with `tidyverse`

## Download data

For our future tutorial I am thinking of using NHANES data (as it is **open** and relevant to us )

I extracted some data from NHANES website (I used this data for a actual study). Please check if you can download it using the following link.

```{r echo=F}

 

downloadthis::download_link(
  link = "https://github.com/upulcooray/Stat-ClubR/blob/main/resources/nhanes_extracted.rds",
  button_label = "Download nhanes_extracted.rds file",
  button_type = "default",
  has_icon = TRUE,
  icon = "fa fa-save",
  self_contained = FALSE,
  class= "hvr-sweep-to-left"
)




```
